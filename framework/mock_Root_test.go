// Code generated by mockery v2.14.0. DO NOT EDIT.

package framework

import mock "github.com/stretchr/testify/mock"

// MockRoot is an autogenerated mock type for the Root type
type MockRoot struct {
	mock.Mock
}

// Configure provides a mock function with given fields: _a0
func (_m *MockRoot) Configure(_a0 interface{}) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockRoot interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockRoot creates a new instance of MockRoot. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockRoot(t mockConstructorTestingTNewMockRoot) *MockRoot {
	mock := &MockRoot{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
