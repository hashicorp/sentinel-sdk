// Code generated by mockery v2.14.0. DO NOT EDIT.

package framework

import mock "github.com/stretchr/testify/mock"

// MockNamespaceCreator is an autogenerated mock type for the NamespaceCreator type
type MockNamespaceCreator struct {
	mock.Mock
}

// Configure provides a mock function with given fields: _a0
func (_m *MockNamespaceCreator) Configure(_a0 interface{}) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Namespace provides a mock function with given fields:
func (_m *MockNamespaceCreator) Namespace() Namespace {
	ret := _m.Called()

	var r0 Namespace
	if rf, ok := ret.Get(0).(func() Namespace); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Namespace)
		}
	}

	return r0
}

type mockConstructorTestingTNewMockNamespaceCreator interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockNamespaceCreator creates a new instance of MockNamespaceCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockNamespaceCreator(t mockConstructorTestingTNewMockNamespaceCreator) *MockNamespaceCreator {
	mock := &MockNamespaceCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
